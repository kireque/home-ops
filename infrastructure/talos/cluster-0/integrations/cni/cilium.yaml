# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQWxibDkxQzFJZ0syRVVwWk1acVFhVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJd01UazBORE15V2hjTk1qWXdOekU1TVRrMApORE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhlVmJEb05Qa3BTSXlHSTRLSlpaWUpIa0VwdkwrZHM3UHVUNXUrLytmR0x6V0ppcncKWS9VR0JIUkUrUFBIYU1qdmNOeTRkclFEeEd0bVQ5VkVaNUZTOXBURVY4WUdMVmUxeDFBZzQwWlhHMk5BMjM4agpTYjJISHNZVHgxWVFQc0RUVUMrK28wckpsTnNPbGFTWmplS09aWGF0Ykw5aVdReTd1UjN3RFJvZzFLRkVVSWt3Ckdwd054ZFB1bXRCTWErYmE1NDdNNWxNVkQxUTl0Y0xWakFhcXc0NkJwZVE2c3R6cFFRS1NNWFh3NG9xSmUrS0sKeTJBZWUweEorYUNpNFRPNHdVelRqYkRPR1JwM29MdWIyRWNNeU1wSUh1UGxSYXpTR00rNXdLUWhvZ0pkSGVxbQphSzVURGJwbkJxRng5cFJpeUpFQXZjbFdsQ2VKa2pES3VjOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxR2x6SERsMVZONlQ1ZnNaY01PTU1NcURST1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFSnU4Y2pxK25oN0oyU2ptUkpjRUhnL3BjS1BiU0Nyd0pNaHZJOGlXdDd2Q0NBYU8rSVJVMlJTCmFtVmNuTWdDamJBSVlQUVp1V0lSbFRPaGZCZ1VwWWR0RGZ0bUhrMktva0JFdDdjdlZWNGxTc1NVOURoVzQxMXIKNk9tRTI3UkFPMVpYMDNGRzJCdGR3ckZOM1JXeE1YN1BDaStTd2JqY1dHeHNscnNrWERwSHJxUXYrdFRwbGxJSQo1dENWTU82QXNYNjVEeGE3b0NGYThEMTZuOFhlZUtiRFpzanEyT2ZHNW9IWk9Mdjk3SXM5MVRlTzZZNitmWFlSCkdBSUQ5amUvZ1d1cytJZTJTeGx0TmpBcmsyN1FCRmlKUDBKeThoL2VvbkRBQkM1RFZNK3k2RGgvVVZ5NzA1a2kKRUVoaXFIelAvbjkxNDhXdVUxYmIwSG9tOXhjSHpwaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFhsV3c2RFQ1S1VpTWhpT0NpV1dXQ1I1QktieS9uYk96N2srYnZ2L254aTgxaVlxCjhHUDFCZ1IwUlBqengyakk3M0RjdUhhMEE4UnJaay9WUkdlUlV2YVV4RmZHQmkxWHRjZFFJT05HVnh0alFOdC8KSTBtOWh4N0dFOGRXRUQ3QTAxQXZ2cU5LeVpUYkRwV2ttWTNpam1WMnJXeS9ZbGtNdTdrZDhBMGFJTlNoUkZDSgpNQnFjRGNYVDdwclFUR3ZtMnVlT3pPWlRGUTlVUGJYQzFZd0dxc09PZ2FYa09yTGM2VUVDa2pGMThPS0tpWHZpCmlzdGdIbnRNU2ZtZ291RXp1TUZNMDQyd3poa2FkNkM3bTloSERNaktTQjdqNVVXczBoalB1Y0NrSWFJQ1hSM3EKcG1pdVV3MjZad2FoY2ZhVVlzaVJBTDNKVnBRbmlaSXd5cm5QVVFJREFRQUJBb0lCQUNGR2p3K0FCTVdSdVdJNwpUWHNoNFBaUks2c01HSUNGZURBZjNwN3lnZDh3LzIxN1pJcmx0WnVWdkxNUktxa2JSY3hRazhLRmdqdXNHVTJZCktwbFZ6NVMyMzIyNnBuYnk2aWJocTJtdklRcHArRlB5RU9sY1VLUklYbU04Mys2MTFDOWJmakJjV1FVMityMUUKU0c2QkNoYUowdUgxVXFscEN3QUphZW1yaFZlaXd0dmFmT0ViaTNjM09uSFNwM09tb0l0YzBLWThjTFZwV0h3cAp1dGxzOGxFTUtQSGZxSDM0WVhuZVpiM3VMa21mMXQvcFlwZkpBdXJMUFN0SEhxN3E0bnhWZ1A1UUxnUWFxRDRFCkE5TmIvWUJlUDQxb2lSdFVqWDJ5RU5yMnBuRVBVVXZvZy8yRE5JOGxwVU8xTnc5bVRhYXFkODNKWHRJSDE5SzAKa0xQZmtpRUNnWUVBNnlwc2liM21INU9EdGRLSEF1Q2pBN3lVUzZyaENoZWUvQTN6ZzA1a282WjlkZnd4VEVuNwpsV2FycDlzNW5RMjN5cTAyNTZES3VQbGROSnVWaSsyaHRBM2wxM1Y1ZUVIN1hnKzFaV2tpV2tvdFdtQ2hvbFJuCko5RXdYODVqSU14QWlCT0xQcUJ5UzIxR2JVeHZzS1NsRFBhV2tnVWZXY1YyWTlSUTVnTmo1RmNDZ1lFQTlYTWIKQ0Q2SEtGZDE4NFZrTzF5WEJCa1ovQjRURTVUSVJrRVFNbER6MVdtSFFyWHQzR1dUZ2xEVG5pV2JhaVpXL2JKVwpSdVpPdHlNTWhNVHZKVWFzN3hEck1zZEpDdWloaWNmd1hxODR3cmdoNWIvai9lcTJEZkYyV0VoVnBDbGxwblR1CnlLazlSQ0hiRnFaR25hejl3WVZqeS9JUExKQzZhQ3FvVW1QTzRKY0NnWUVBa0FNczhMVlFaZW5xY01CNldiTEQKWVpoc29HSUc2aTFJK1VaNTUrRnNGQ1B6RlB2YUhNUDV3NlphWExNTjl6WGRaY3Jwb3JOL01nUFRwbEhaSlJYagpQdVo3NkpSU1RPanJUTkVGM3hLaExQWGNERXE4OFRJSzhnRlRSSGlaa0E1RlBvL3BaL0xOeTQ4aDMvRTlQTW0zCklkY29va2RzeVliNVYyMUFGWHZpQW9VQ2dZQUpCcVNWMXdiTld2b0JiSVJWRW9DVExBRWlubENCUmRWZmtBRHkKZUx1ZXUzUzM1VXpMOEFoT29INUhzSVpZanZSZisvRGtSby9hZURWN3BHcE82cHh0WmlmZ0JDZ1JlS0NJR293aQpUenM5SGR4UlFJODN4U3ZRczNKd3FLaE5reUFqME9UL0NBb3l1VFAvVHpvRmpsaitodE0ycXI0WUczSmZaa0l1ClZYRkVIUUtCZ0haZHBQeFowd1hyWXZRaGI1TGprWnBOL1U3RlFib0dTd1FFNFk5a2JqY1hIRWdobW1LSmhrc3kKUzhyMTdQR3MzRXIramc4QUwzQmMrRUVrSjNZTmYra0hJWVlTNVNzRVJUakNiRnRiVWEzNklTYWhhOHd5VjJvaQpzN2lpTmc1SERVMGdvZDgwTHZRMjk3Q0xXQjlwV0E2Y293a0l5Tm52dk1CSFBHZFdzK05iCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQWxibDkxQzFJZ0syRVVwWk1acVFhVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJd01UazBORE15V2hjTk1qWXdOekU1TVRrMApORE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhlVmJEb05Qa3BTSXlHSTRLSlpaWUpIa0VwdkwrZHM3UHVUNXUrLytmR0x6V0ppcncKWS9VR0JIUkUrUFBIYU1qdmNOeTRkclFEeEd0bVQ5VkVaNUZTOXBURVY4WUdMVmUxeDFBZzQwWlhHMk5BMjM4agpTYjJISHNZVHgxWVFQc0RUVUMrK28wckpsTnNPbGFTWmplS09aWGF0Ykw5aVdReTd1UjN3RFJvZzFLRkVVSWt3Ckdwd054ZFB1bXRCTWErYmE1NDdNNWxNVkQxUTl0Y0xWakFhcXc0NkJwZVE2c3R6cFFRS1NNWFh3NG9xSmUrS0sKeTJBZWUweEorYUNpNFRPNHdVelRqYkRPR1JwM29MdWIyRWNNeU1wSUh1UGxSYXpTR00rNXdLUWhvZ0pkSGVxbQphSzVURGJwbkJxRng5cFJpeUpFQXZjbFdsQ2VKa2pES3VjOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxR2x6SERsMVZONlQ1ZnNaY01PTU1NcURST1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFSnU4Y2pxK25oN0oyU2ptUkpjRUhnL3BjS1BiU0Nyd0pNaHZJOGlXdDd2Q0NBYU8rSVJVMlJTCmFtVmNuTWdDamJBSVlQUVp1V0lSbFRPaGZCZ1VwWWR0RGZ0bUhrMktva0JFdDdjdlZWNGxTc1NVOURoVzQxMXIKNk9tRTI3UkFPMVpYMDNGRzJCdGR3ckZOM1JXeE1YN1BDaStTd2JqY1dHeHNscnNrWERwSHJxUXYrdFRwbGxJSQo1dENWTU82QXNYNjVEeGE3b0NGYThEMTZuOFhlZUtiRFpzanEyT2ZHNW9IWk9Mdjk3SXM5MVRlTzZZNitmWFlSCkdBSUQ5amUvZ1d1cytJZTJTeGx0TmpBcmsyN1FCRmlKUDBKeThoL2VvbkRBQkM1RFZNK3k2RGgvVVZ5NzA1a2kKRUVoaXFIelAvbjkxNDhXdVUxYmIwSG9tOXhjSHpwaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRU0IzeWdtV3hQOU10NTJaVy9BMWFVREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJd01UazBORE15V2hjTk1qWXdOekU1TVRrMApORE15V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERkdUOU1YcEt5K0ZhcHFoczFEbzI0bGlaUGdwdmoKUDJBZkVYSWhpV244VUJXNzJoeFl4dnlQS0tYazZCT3djOXRjWXV1c0NqTXAwVExwMDBDT01zQithZTR4YldmegpnZUtjRXN4MTRuenB6SU5lU0RjVUZJMkpyWWZQQXlhaUltcW1Wanp1cGEyaUUzZ3NzeHR2MXRmRjhvM01uS0ozCkZSUHA5NDVJcnpuZ0d6clYxVThTRlBGN2lxWTl2dHRKYjhTUEZTMUxBdzlBbEQ0YjJYdzZRTmFYZDREbmxsVDIKSU9FZGZENll2a1dFR3dCOGdDT2hZeFNMUWtldmRZejlDVFFtc3JCZHd2OEJaRzJtNXdiZEsrOWxETkdOdkVPZwpINFRQbmxJVU8raVFSVWorZnJGZ1g0a0ZCVmFTeDYvdjFDMTlzT0xjTkZleDdsTkQwWjlwL2xlaEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOUnBjeHc1ZFZUZWsrWDdHWEREakRESwpnMFRtTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF2eDdKZW15NWd2VktNOW02Uzc4Qy9SbEk2TEJMRmV0aVhDL21jQkdhbjRLZ3F2SVAKZnNvSGF6bEcweTBRR29JVTl1aTR0TVd0SURjdThCRWE5YXg1UDRGSDVhRzg5U1BNUkhXK2RzUERYSFVJUmdybAorRTlERmtIc3N4S2paTnRLOExnZTd5Y2w5QlZKZVJJVmJiRWZ0ajlpejhSdGdITkRjVEZpZ3doYmNDNVZoRDV0Ck42SEEyN0tyQm5jcWNkTEhjcmhDU0krcDJXRjQyNll1ZHR3azVITmZiNUYxamlDR2xXcFcwZTVnVzdiS0htbmQKSEZFMW1pakZZUXFBNnVQblhLdDlOSE1UaFlxNGRtMkYrdTVZaFNEdHRHL0JBSHhTaXlIM0diaGVUSHJRU1NjRwp6dWZQMVlyK0djZWtBa1dNSVJKUGQ3TnNsbVMwYVNiQ0RvdFBMQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFJrL1RGNlNzdmhXcWFvYk5RNk51SlltVDRLYjR6OWdIeEZ5SVlscC9GQVZ1OW9jCldNYjhqeWlsNU9nVHNIUGJYR0xyckFvektkRXk2ZE5BampMQWZtbnVNVzFuODRIaW5CTE1kZUo4NmN5RFhrZzMKRkJTTmlhMkh6d01tb2lKcXBsWTg3cVd0b2hONExMTWJiOWJYeGZLTnpKeWlkeFVUNmZlT1NLODU0QnM2MWRWUApFaFR4ZTRxbVBiN2JTVy9FanhVdFN3TVBRSlErRzlsOE9rRFdsM2VBNTVaVTlpRGhIWHcrbUw1RmhCc0FmSUFqCm9XTVVpMEpIcjNXTS9RazBKckt3WGNML0FXUnRwdWNHM1N2dlpRelJqYnhEb0IrRXo1NVNGRHZva0VWSS9uNngKWUYrSkJRVldrc2V2NzlRdGZiRGkzRFJYc2U1VFE5R2ZhZjVYb1FJREFRQUJBb0lCQUYweWxBQzdrMmgzRHh1SQo2UGFNbkN6Vkt1WmIzdlIwaWpJR29NNEUyUTNLbkl4SUZURlJYaWtmVWxwTDlzdHY3U0RoVVlqM0JieFhSRmpXCllHY2N6bks0Q2o1cStrVmxmRTdLZ00yWk8vR2RsOXlrRHc4NnJMYVdUR3B4bGZvQ2hpV0RENnJVd3FhcHlDQnkKekoxMG5IRG9RVzZuL2hhSzYvQ3M4eVdoWFo5K3k5dE93LzNHdFdaSDRyN2pWYmt2U205WlFKVi9QN2FsU2g5cwpiaUVPNTAwcXRqQlB3d3EwK0JkS2RDWXE3M0NWaGk2clFZYTVYOFFDbG5WbXlZa3R1NjQ4N2I3WGdPc1dCVG51CjVTU1ZUUXQycGNzaVdoMlRpNjQvU055Vy9Xd3l6bTlIa3Z2TFBRTFFiMm5Db0Q3dHFCbmFKWkxub0gyWDV6aEYKZm9iemwvRUNnWUVBMHlHSysxWmpQbkM5TkNpRjBXK3ZwLzBoVzE4WFQwSGxVK1p1Z0NmWi90bmpMU1FldmtrSAp1ajhjcWdqUWd5dkRCZEEyb0R0cTNxMVNZV2Foay9LSXViQ3VNVzBOSXpjQVJmYzBoU1pXaEJteGgvVGNHL3BiCkhvcWVNMWU4QnNrd3ZHVFV1TXJIbXdJUTZrUHRqck5FU3VZSGdtQnhPL2Jtb1RBMFhNWTR1NFVDZ1lFQTd2eEgKbjQ1dlExUXV2bEUycDMycVBWZ3ZsS0tqbEliQUJucnIzajdqRFZaWmtuS2lPcHAra01PaTR5VFpXWGVyYndjTQpEdUNNQzQ4b1J1ZTU2d3dUMXRQVEM3RnBucXUrVWpzWG94NGlQYjdENXhId2RjT2IwOTZ3TmVhMHlRYXlRVEZ6Cmo5dE9Zam9QYU8xNnVUbmVxV2ZXTUhRZWV0ekY0YjI2SWxnRWdHMENnWUJ6ZnZiemRSZUhVYzcrMkdnVDRQLzcKYXFxenZEb1pIbGdnWkg3d1ZseVhZSVE0N25odTZhNXpnUkRpSno1QmMxQVZQd2lTOE00T2tFdnZnbUJEZWJxMwpzZUlvb1pvOU9GcEs2K2RzSzBQS3NlOS9DMERaZ1VRVldna2UxeERCdVkrU2o2b2FpTHRXblhPNVkzMXh3YmxMCks3alI1b1lySW02Wm9MQVVURTgrclFLQmdRQ3U4cS9iOWdFdFlLcjNWNnlTNEVPSHRNN2dHRTkzbzAxZmNReksKSFc5SmpEVDJLRVRxY2I3RmF2SUxKaWFXZ0N4WGt1a1kydmlxWFpvMmpkeGtYT3NKRVBnbVR6SHFuZjh0WTJUaQpYR1Rrbm9uNjFmOFp0cUNVY1NpOXpLMzdtNU5TZGtrS3ZwaWEvN1hZTWtEczU1aEFtMnNJL1hoeXFMdVRqYmg4Cis4SVA0UUtCZ0ZwUVQ1cEdpOVQrQ0dvb2xNSDI2Q3hKZkJYRHJqS2hEWWkvbm1BR0NyM21ZUm90NFFsWDdyNnIKUmxlMEpFblEvUlN2MGlFY0lYa1RMTFhZcVFaWExvZE41eVVHb1VpR3cwOHhuRXBUTVZPcWNzeStDRFpQN2dwRApoSzJ3Zk1HQ3g3VlcvMnBFck45TW1IM2VkVG5mbzhtSTJnMzZtYlZoY1g1NTFhdWt6U1ExCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQWxibDkxQzFJZ0syRVVwWk1acVFhVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJd01UazBORE15V2hjTk1qWXdOekU1TVRrMApORE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhlVmJEb05Qa3BTSXlHSTRLSlpaWUpIa0VwdkwrZHM3UHVUNXUrLytmR0x6V0ppcncKWS9VR0JIUkUrUFBIYU1qdmNOeTRkclFEeEd0bVQ5VkVaNUZTOXBURVY4WUdMVmUxeDFBZzQwWlhHMk5BMjM4agpTYjJISHNZVHgxWVFQc0RUVUMrK28wckpsTnNPbGFTWmplS09aWGF0Ykw5aVdReTd1UjN3RFJvZzFLRkVVSWt3Ckdwd054ZFB1bXRCTWErYmE1NDdNNWxNVkQxUTl0Y0xWakFhcXc0NkJwZVE2c3R6cFFRS1NNWFh3NG9xSmUrS0sKeTJBZWUweEorYUNpNFRPNHdVelRqYkRPR1JwM29MdWIyRWNNeU1wSUh1UGxSYXpTR00rNXdLUWhvZ0pkSGVxbQphSzVURGJwbkJxRng5cFJpeUpFQXZjbFdsQ2VKa2pES3VjOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxR2x6SERsMVZONlQ1ZnNaY01PTU1NcURST1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFSnU4Y2pxK25oN0oyU2ptUkpjRUhnL3BjS1BiU0Nyd0pNaHZJOGlXdDd2Q0NBYU8rSVJVMlJTCmFtVmNuTWdDamJBSVlQUVp1V0lSbFRPaGZCZ1VwWWR0RGZ0bUhrMktva0JFdDdjdlZWNGxTc1NVOURoVzQxMXIKNk9tRTI3UkFPMVpYMDNGRzJCdGR3ckZOM1JXeE1YN1BDaStTd2JqY1dHeHNscnNrWERwSHJxUXYrdFRwbGxJSQo1dENWTU82QXNYNjVEeGE3b0NGYThEMTZuOFhlZUtiRFpzanEyT2ZHNW9IWk9Mdjk3SXM5MVRlTzZZNitmWFlSCkdBSUQ5amUvZ1d1cytJZTJTeGx0TmpBcmsyN1FCRmlKUDBKeThoL2VvbkRBQkM1RFZNK3k2RGgvVVZ5NzA1a2kKRUVoaXFIelAvbjkxNDhXdVUxYmIwSG9tOXhjSHpwaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQVBwUGc2c2ZUenBxSFFFaU5yR3pGK2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU1ERTVORFF6TWxvWERUSTJNRGN4T1RFNQpORFF6TWxvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpYSGlqK1J2TTc2MlgyRmIKOEVoUUYrWjM4Z2JnaXVwVFp2RlFBaXVXY08xRFVxenA3dDlFYnVxVWRMYVdtRjh4ZHlJYTZWdFFoTmVma2kwZgpuZHV5ZzFoS3BXb2J6eXRpeUFtbW5MT3R3aU5hTHMvYzlVZ1FMMExlN1JjTWJuWVhDMTNHamZJcC9YeVlHd3FkCjJkanNwdy8xb3BQekVZMWJnbU9XSnRicld2NjA2YmYzTVFUbG1wd1dWYW9aNkNQVDEwU3dXbExpdi8yeURKZGYKUGsremlIbEJlemlKaTBDN1RDM0xpcFlIaVp2dFNjVnNRdUFHNHdRK0Q5UEV1MU1qVXpscFVvUVZuUk1STkF2Sgp2L3BIWFN4eWd5UTlNd2J1Snlqa1JqNXZCaExrZU1FUW5Ya05IUi9RTThMNERldzRQNDdFN3I3U0tVTGl3TmU5CmlXN05vUUlEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVFVhWE1jT1hWVQozcFBsK3hsd3c0d3d5b05FNWpBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRDM3aWpCenVkcEdUanVuR3g2UGRCcU4KemdXdkZVQjQreWZrRTVZYzFaTm5kRDRXRENQY2NEdVllVnZhS0xjdFBVZ3Z5ZjRXQ2ZiUk5tTFh1ZjI2OXZvbwowcURmck1DU0NnSE5xb0QwUUpFVEJ5Q1ZYOU05aDNvQ0l5SmJ2NHd4cjRtMC8xbW50V2VkYy9GWGJQQWplOWw0CkMxQS9HT3VaeTNSSnFzeEhBendhZzFhWjVFMU9CWHJ1VmNYb1hRYmozNTZrQjU0dHQxQjdXZWViK1BiRW95d1QKMUxqZVNiR2NXZWlLMDlSa2dRYjNDVmVGRXBIMGNrNUxWRHAvTlVTbDhKTVZKa3AyQzArcVNjNG94elF4a3RyMwoxcWtBaDdqVytzNTBCeXZTajVJeUhISnFYUW1CTG1yVzZFNDRiZnNuRlBQaGFsUDdRbitTYS9VZ0hWR1lXRmM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelhIaWorUnZNNzYyWDJGYjhFaFFGK1ozOGdiZ2l1cFRadkZRQWl1V2NPMURVcXpwCjd0OUVidXFVZExhV21GOHhkeUlhNlZ0UWhOZWZraTBmbmR1eWcxaEtwV29ienl0aXlBbW1uTE90d2lOYUxzL2MKOVVnUUwwTGU3UmNNYm5ZWEMxM0dqZklwL1h5WUd3cWQyZGpzcHcvMW9wUHpFWTFiZ21PV0p0YnJXdjYwNmJmMwpNUVRsbXB3V1Zhb1o2Q1BUMTBTd1dsTGl2LzJ5REpkZlBrK3ppSGxCZXppSmkwQzdUQzNMaXBZSGladnRTY1ZzClF1QUc0d1ErRDlQRXUxTWpVemxwVW9RVm5STVJOQXZKdi9wSFhTeHlneVE5TXdidUp5amtSajV2QmhMa2VNRVEKblhrTkhSL1FNOEw0RGV3NFA0N0U3cjdTS1VMaXdOZTlpVzdOb1FJREFRQUJBb0lCQUhrSmxwUjEzZm9iYXZESQp1RlRaRmE3dkRrMmVOWjVDTGI3aGZ1UzRiMXE2dmtZd0wyYVhUWWNYVnoxbjhWTjJDZnVKTVZlNGY3aTBISVFQClo2Z21Mb2JwZHBqNzZjUmxhRDQ0U1Z2YkZBempyUmNWU2JXTXJsUlp6bUxhaUcxdnoyWFg2c25vR1VzSm84ZVMKdXFzRS9XL3puQ0ViajBJUkNRL0p3a1hCcTBtZzVTRjRoSERHZWpERGZGZ1FVU3MxaDdnMUxTWjBwKzdNWEtBUgpFb01lRVovOVNQS0NxMFZJVXBDYmJRUHc3LzF5aDhrakgyQStWMXA4N21kdHVwQ2V0ZGxJZERZc1FkaHk0dFl1CkxKUnVIZ3hwWGZqRjJNdkhadGJSTWhCa01BMTBqV2Z3NDRVNnp4aEUrOEhkempPd0pyazVCZDluMUZTc0IrYTQKZ1h0NmtIMENnWUVBMHVFUE1EOWhIOXpYcGgzekJUVm9DeUh0TnhWQ0FpN3ZmaWlHWHNBTk9mNVd2bmgyRVl6NwovUjlYMFdCUmFjMlJWT2t5cnNBRlBZN2JQRmtuSzY0ZjZwWW92bUxqcmFmZnhncm1Kbnk3TnBrWHAvN0VsdTk0CnZXOGhXRDR5UEl3SmtVK3Vobzc2UEZDeUNYUnBsRmVIdUZsT3AzYnJLUWxBTWZGblNLUklOV3NDZ1lFQStXY3AKa0RxeE5KeEh1UkVuN1FoYURGYW43NVVISU5FMUtuQ2hJRXBoZjlUUHpuOVRESkJaT3pjWHh6V1dEa2U4cXlTYwpKdHozMFBmSkxqMW1VdlJVQ0JSTUR0NlNEUzlxWlVVbzRhdElpeVppakVXQnh6U1RrRFp5ckNoY214QjhWeWU3CkxSNnRkcnVnbFd0a3RxZEhxWGZ3TTBQMExWUWZLNXhNTG1jT2dDTUNnWUJGNGRzOHErUXR3T3VkMnhMcnlQVC8KcTNDRzduNS9acnBxM2xjWkV4L085aUFjNHFLTjBtQzNVeW13OHZCSDFaMnh1ODNWNTBCVlZBQUhFYXhQWjFhZwpVTDZUeVFXV1NLbDVZYWMvWGRwVWo0c3RXdG9mQXFES2RnZGd6TXV0RU9NaXluc1ZrRkFRcU5VM0dPTGNDOTJvCkU4Qmk4cCtmYTdkZ1ZaVmFsMFp1blFLQmdIVzJiek9Yd0JPb3YyRmw2NFpBcnQrcjlzOXBjMWZWNWxZRm1zYjIKMUZYVlI4K2E0TVBKVFpSWlNHdkpxdTFLaG8zd1ZaTXlML1Q5UG9NSWo4Y1BjcW50aW9ocUhGMEV5QjdNS2FONQppRi9FMmphQ2grSlJ1bVFTanNVYXQ3cW9hVWRwaFRxaWhCVEtNZHpVTjFET1cxQnRQMzJ5MFFpajc2SlJ2dE1YCjZRd3BBb0dCQUxyMG52dFJ1R0NnVzhaZ1pNek9zM0FmSmN0N2FIcmFYK21Ia2E5V2lTMTA2cFg2WkMraTN4aTkKNW5VMG1JeFR4Zm90bGRPVmpiVDBtQnFEeWY3RGVySW5UWFo5R3JVZzNFSnZtM3Qva1BNQzFzdTZRU3FFWlZ2NAozcy9GTVdoeUorbmYxNEEyRGZvd1lGTXBqUGpGYnVsSEtFU3QzSXArMVg3NHVUcU1CN2tLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: abc001be039a4d9423cbb0c5aa59febeca4bfe7ea69568106c389d9eff05ae55
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.econline.local
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2b2e9759f6b7b7c4ec466b4ce0a8881cc8c204694d803033b246fd49aabe6b03
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: abc001be039a4d9423cbb0c5aa59febeca4bfe7ea69568106c389d9eff05ae55
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.econline.local
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.econline.local
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.econline.local
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
