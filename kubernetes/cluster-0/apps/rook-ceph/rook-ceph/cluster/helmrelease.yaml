---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.12.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      network:
        provider: host

      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "delta"
            devices:
              - name: "/dev/disk/by-id/nvme-KINGSTON_SA2000M8500G_50026B7683E1CB94"
          - name: "enigma"
            devices:
              - name: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T9_BTNR046416N11P0B"
          - name: "felix"
            devices:
              - name: "/dev/disk/by-id/nvme-KINGSTON_SA2000M8500G_50026B7683E1CB7C"

    ingress:
      dashboard:
        ingressClassName: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            proxy_ssl_verify off;
          hajimari.io/icon: mdi:chess-rook
        host:
          name: &host "rook-cluster-0.${SECRET_DOMAIN}"
          path: /
        tls:
          - hosts:
              - *host

    cephBlockPoolsVolumeSnapshotClass:
      enabled: false

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: "35m"
                memory: "64M"
              limits:
                memory: "144M"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 128M
              limits:
                memory: 2Gi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1