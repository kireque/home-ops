apiVersion: v1
kind: ServiceAccount
metadata:
  name: scale-job-account
  namespace: downloads

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-scaler-role
  namespace: downloads
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
  resourceNames: ["sabnzbd", "sonarr", "radarr", "prowlarr"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployment-scaler-rolebinding
  namespace: downloads
subjects:
- kind: ServiceAccount
  name: scale-job-account
  namespace: downloads
roleRef:
  kind: Role
  name: deployment-scaler-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-down
  namespace: downloads
spec:
  timeZone: "Europe/Amsterdam"
  schedule: "55 23 * * *"  # At 23:55 every day
  successfulJobsHistoryLimit: 1  # Automatically delete completed jobs
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: downloads-scaler
            action: scale-down
        spec:
          serviceAccountName: scale-job-account
          restartPolicy: Never
          containers:
          - name: kubectl-container
            image: bitnami/kubectl
            command:
            - "/bin/bash"
            - "-c"
            - |
              kubectl scale deployments.apps -l automaticSchedular=true --replicas=0

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scale-up
  namespace: downloads
spec:
  timeZone: "Europe/Amsterdam"
  schedule: "5 19 * * *"  # At 19:05 every day
  successfulJobsHistoryLimit: 1  # Automatically delete completed jobs
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: downloads-scaler
            action: scale-up
        spec:
          serviceAccountName: scale-job-account
          restartPolicy: Never
          containers:
          - name: kubectl-container
            image: bitnami/kubectl
            command:
            - "/bin/bash"
            - "-c"
            - |
              kubectl scale deployments.apps -l automaticSchedular=true --replicas=1
